# -*- rd -*-

= README.ja

$Id$

== 作者

Kouhei Sutou <kou@cozmixng.org>

== ライセンス

GPL or BSD License

== メーリングリスト

((<COZMIXNG RWiki - 連絡先|URL:http://www.cozmixng.org/~rwiki/index.rb?cmd=view;name=%CF%A2%CD%ED%C0%E8>))を御覧下さい．

== なにこれ？

Gauche用のサーバ/クライアント方式Webベースアプリケーションフ
レームワークです．現在はHTTP用モジュールしかありませんが，将
来はSMTPやGUIツールキット用のモジュールも追加しようと思って
います．

以下のような機能があります．

  * セッション管理
  * ユーザ管理
  * スコープ別データ管理
  * アクセス制御
  * セッションのタイムアウト管理
  * 取り換え可能なユーザ/セッション管理モジュール
  * CGIクライアントのサポート
  * ((<esm|URL:http://www.cozmixng.org/~rwiki/index.rb?cmd=view;name=esm>))
    のサポート

以下のような機能もあればいいなと思っています．

  * I18N
  * プラグイン
    * セッション管理とユーザ管理もプラグイン化したいな．
  * SMTP経由のクライアントのサポート
  * esm以外の(MVCの)View構築支援ライブラリのサポート

以下のような機能はさほど興味がありません．

  * サーブレット毎の起動/終了
    * プロジェクト毎に一つサーバを立てればいいのでは？

  * オンラインパッチ
    * 特定のポートでREPLすればいいだけなので簡単だけど，アク
      セス制御とかすると面倒だから．

== 入手方法

((<URL:http://www.cozmixng.org/~kou/download/scratch.tar.gz>))

  % svn co http://www.cozmixng.org/repos/gauche/scratch/trunk scratch

== インストール

  # gosh install/install.scm

== 構造


                  dsm
                ------>               ----->              ------>
                   id                   id                session
                 action                action             others
                 others                others
  クライアント          scratchサーバ         サーブレット        アクション
     CGI等        dsm
                <------               <------             <------
                  header               header              view-name
                  result               result
                                                 /\  |
                                          result |   | session
                                                 |   | others
                                                 |   \/
                                                 esm等

scratchで管理するデータには3種類のスコープがあります．

  (1) サーブレット単位
  (1) セッション単位
  (1) サイクル単位

== 使い方

scratchを用いたWebベースアプリケーション開発は以下のようにな
るでしょう．

  * アプリケーションの機能を提供するライブラリの作成
  * クライアントの要求に対応するアクションの作成
  * クライアントに返す結果を生成するesmの作成

最初のライブラリの作成はscratchに依存しないようにするべきで
す．依存しないようにするとscratchを使うことをやめても使いま
わすことができます．

ここでは，ライブラリはすでにできているものとしてアクションの
作成とesmの作成を扱います．

=== アクションの作成

まず，アクションを扱うモジュールを作成します．

  (define-module sample-app-servlet
    (use scratch.servlet)
    (use sample-app))
  (select-module sample-app-servlet)
  (provide "sample-app-servlet")

ここで，sample-appというモジュールがアプリケーションの機能を
提供するライブラリで，sample-app-servletがクライアントの要求
に対応するアクションを扱うモジュールです．

このアクションを扱うsample-app-servletモジュールは

scratchを用いる場合は
